{"version":3,"file":"static/js/76.1fed15df.chunk.js","mappings":"6PACA,GAAgB,UAAY,wBAAwB,WAAa,yBAAyB,KAAO,mBAAmB,SAAW,wB,SCqD/H,EAhDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OAZAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEKC,EAAAA,EAAAA,IAAalB,GAAS,KAAD,EAAlCM,EAAIS,EAAAI,KACVZ,EAAQD,GAAMS,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEdM,QAAQC,IAAGP,EAAAK,IAAI,yBAAAL,EAAAQ,OAAA,GAAAV,EAAA,kBAElB,kBAPc,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAQfhB,GACF,GAAG,CAACT,KAGF0B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UAEIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,QAAYH,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAAA,UAAcH,SAAC,YAClCF,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAAA,WAAeH,SAC3BtB,EAAK0B,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAaH,EAAbG,cAAeC,EAASJ,EAATI,UAAS,OACrDR,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,KAASH,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAAA,SACdO,IAAG,GAAAC,OACDJ,EACIK,EAAAA,EAAkBL,EAClBM,EAAAA,EAAc,SAAWL,GAE/BM,IAAKN,KAEPP,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,YAAc,IAAEQ,MAExBP,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,eAAiB,IAAES,OAbCH,EAezB,UAOjB,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainTitle\":\"Cast_mainTitle__Jmh7p\",\"styledList\":\"Cast_styledList__Hw3Hl\",\"item\":\"Cast_item__a0CDL\",\"actorImg\":\"Cast_actorImg__T6qL2\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastMovie } from '../services/getMovies';\nimport { BASE_POSTER_URL, PLACEHOLDER } from '../utils/imgBaseUrl';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const cast = await getCastMovie(movieId);\n        setCast(cast);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {\n        <div className={css.wrapper}>\n            <h2 className={css.mainTitle}>Actors</h2>\n        <ul className={css.styledList}>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <li className={css.item} key={id}>\n              <img className={css.actorImg}\n                src={`${\n                  profile_path\n                    ? BASE_POSTER_URL + profile_path\n                    : PLACEHOLDER + '?text=' + original_name\n                }`}\n                alt={original_name}\n              />\n              <p>\n                <span> Actor:</span> {original_name}\n              </p>\n              <p>\n                <span>Character:</span> {character}\n              </p>\n            </li>\n          ))}\n        </ul>\n        </div>\n      }\n    </>\n  );\n};\n\nexport default Cast;"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_cast","_context","prev","next","getCastMovie","sent","t0","console","log","stop","apply","arguments","_jsx","_Fragment","children","_jsxs","className","css","map","_ref2","id","profile_path","original_name","character","src","concat","BASE_POSTER_URL","PLACEHOLDER","alt"],"sourceRoot":""}